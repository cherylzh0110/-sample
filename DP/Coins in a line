
Description
There are n coins in a line. Two players take turns to take one or two coins from right side until there are no more coins left. 
The player who take the last coin wins.
Could you please decide the first play will win or lose?


public class Solution {
    /*
     * @param n: An integer
     * @return: A boolean which equals to true if the first player will win
     */
     
     //trick is to draw a tree to find the relation between current state and state before. 
     
     for example:
         5   先手
       4   3     后手  （左边是先手取一个， 右边是先手取两个的结果）如同minimax，这时候先手是有决定权的 （所以是或的关系）
      3 2  2 1     先手
      只有当4的下方都为true, 选4才能赢，同理，只有当3的下方都为true, 选3才能赢。 4和3之间是或的关系。
     
     
    public boolean firstWillWin(int n) {
        // write your code here
        if(n==1 || n==2 || n==4)
            return true;
        if(n==3 || n==0)
            return false;
        boolean[] dp=new boolean[n];
        dp[0]=true;
        dp[1]=true;
        dp[2]=false;
        dp[3]=true;
        for(int i=4;i<n;i++){
            dp[i]=(dp[i-2] && dp[i-3]) || (dp[i-3] && dp[i-4]);
        }
        return dp[n-1];
    }
}
