Triangle: Leetcode 120  Divide Conquer + Memorization = dp

什么情况下使用动态规划：
满足下面三个条件之一：
1 求最大值最小值
2 判断是否可行
3 统计方案个数
则极有可能是使用动态规划


分类：
坐标型动态规划
Minimum Path Sum: lc 64. 
unique path: lc 62 63
Climbing Stairs: lc 70

接龙型动态规划: 当前状态与之前的状态有联系，找到这个联系后，考虑是否需要寻找到一个最大或最小值。
Longest Increasing Subsequence: lc300, use dp cost O(n^2), use binary seach cost(nlogn) 
Largest Divisible Subset: lc368  cost O(n^2). sometimes if we want to output the result, we can use an array to store last state
of dp.(保存上一个状态).  compare lc300 and lc368, both need to find the minimum or maximum value from the state before. 

Russian Doll Envelopes: lc354
