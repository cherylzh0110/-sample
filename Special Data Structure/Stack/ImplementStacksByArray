
//this question asks to implement three stacks.
int stackSize = 300;
int[] buffer = new int[stackSize * 3];
int[] stackPointer = {0,0,0};

void push(int stackNum, int value){
  /* Find the index of the top element in the array +1, and increment the stack pointer*/
  int index=stackNum * stackSize + stackPointer[stackNum]+1;
  stackPointer[stackNum]++;
  buffer[index]=value;
}

int pop(int stackNum){
  int index = stackNum * stackSize+stackPointer[stackNum];
  stackPointer[stackNum]--;
  int value=buffer[index];
  buffer[index]=0;
  return value;
}

int peek(int stackNum){
  int index=stackNum * stackSize+stackPointer[stackNum];
  return buffer[index];
}

boolean isEmpty(int stackNum){
  return stackPointer[stackNum]==0;
}


//follow up
//design a stack which also has a function min which returns the minimum element in O(1)
We can use an additional stack which keeps track of the mins.
